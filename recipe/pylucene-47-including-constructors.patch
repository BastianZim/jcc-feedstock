Index: jcc2/cpp.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc2/cpp.py	(revision 1857054)
+++ jcc2/cpp.py	(date 1555663830483)
@@ -375,6 +375,23 @@
 
     jar.close()
 
+def getRang(typearray):
+    """
+    Gets the inheritance level for a list of items.
+
+    Returns:
+        rang level (0 to minus X)
+    """
+    rang = 0
+    if typearray:
+        for item in typearray:
+            item_depth = 0
+            while item.getSuperclass():  # Get single item depth
+                item = item.getSuperclass()
+                item_depth = item_depth - 1
+            rang = rang + item_depth
+    return rang
+
 
 def jcc(args):
 
@@ -814,7 +831,7 @@
                     break
             else:
                 constructors.append(constructor)
-    sort(constructors, key=lambda x: len(x.getParameterTypes()))
+    sort(constructors, key=lambda x: (len(x.getParameterTypes()), getRang(x.getParameterTypes()))) # Sort on both parameter length and order in class tree
 
     methods = {}
     protectedMethods = []
Index: jcc2/python.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc2/python.py	(revision 1857054)
+++ jcc2/python.py	(date 1555672055381)
@@ -20,7 +20,7 @@
 from cpp import cppname, cppnames, absname, typename, findClass
 from cpp import line, signature, find_method, split_pkg, sort
 from cpp import Modifier, Class, Method
-from cpp import getActualTypeArguments, getTypeParameters
+from cpp import getActualTypeArguments, getTypeParameters, getRang
 from config import INCLUDES, CFLAGS, DEBUG_CFLAGS, LFLAGS, IMPLIB_LFLAGS, \
     SHARED, VERSION as JCC_VER

@@ -747,7 +747,7 @@
 
     for name, methods in allMethods:
         args, x, cardinality = methodargs(methods, superMethods)
-        sort(methods, key=lambda x: len(x.getParameterTypes()))
+        sort(methods, key=lambda x: (len(x.getParameterTypes()), getRang(x.getParameterTypes()))) # Sort on both parameter length and order in class tree
         method = methods[0]
         modifiers = method.getModifiers()
         if name == 'iterator' and iteratorMethod is None:

Index: jcc3/cpp.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc3/cpp.py	(revision 1857054)
+++ jcc3/cpp.py	(date 1555663750577)
@@ -346,6 +346,23 @@
 
     jar.close()
 
+def getRang(typearray):
+    """
+    Gets the inheritance level for a list of items.
+
+    Returns:
+        rang level (0 to minus X)
+    """
+    rang = 0
+    if typearray:
+        for item in typearray:
+            item_depth = 0
+            while item.getSuperclass():  # Get single item depth
+                item = item.getSuperclass()
+                item_depth = item_depth - 1
+            rang = rang + item_depth
+    return rang
+
 
 def jcc(args):
 
@@ -788,7 +805,7 @@
                     break
             else:
                 constructors.append(constructor)
-    constructors.sort(key=lambda x: len(x.getParameterTypes()))
+    constructors.sort(key=lambda x: (len(x.getParameterTypes()), getRang(x.getParameterTypes()))) # Sort on both parameter length and order in class tree
 
     methods = {}
     protectedMethods = []
Index: jcc3/python.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- jcc3/python.py	(revision 1857054)
+++ jcc3/python.py	(date 1555671713146)
@@ -20,7 +20,7 @@
 from .cpp import cppname, cppnames, absname, typename, findClass
 from .cpp import line, signature, find_method
 from .cpp import Modifier, Class, Method
-from .cpp import getActualTypeArguments, getTypeParameters
+from .cpp import getActualTypeArguments, getTypeParameters, getRang
 from .config import INCLUDES, CFLAGS, DEBUG_CFLAGS, LFLAGS, IMPLIB_LFLAGS, \
     SHARED, VERSION as JCC_VER
 
@@ -734,7 +734,7 @@
 
     for name, methods in allMethods:
         args, x, cardinality = methodargs(methods, superMethods)
-        methods.sort(key=lambda x: len(x.getParameterTypes()))
+        methods.sort(key=lambda x: (len(x.getParameterTypes()), getRang(x.getParameterTypes()))) # Sort on both parameter length and order in class tree
         method = methods[0]
         modifiers = method.getModifiers()
         if name == 'iterator' and iteratorMethod is None:

