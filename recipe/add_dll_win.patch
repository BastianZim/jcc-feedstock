Index: jcc3/python.py
===================================================================
--- jcc3/python.py	(revision 1897994)
+++ jcc3/python.py	(working copy)
@@ -1618,6 +1618,7 @@
 
     out = open(os.path.join(modulePath, '__init__.py'), 'w')
     line(out)
+    
     if shared:
         line(out, 0, "import os, sys")
         line(out)
@@ -1625,10 +1626,26 @@
         if find_jvm_dll:
             line(out, 1, "from jcc.windows import add_jvm_dll_directory_to_path")
             line(out, 1, "add_jvm_dll_directory_to_path()")
+
+        line(out, 0, "if hasattr(os, 'add_dll_directory'):")
+        line(out, 1, "for location in (('bin', 'client'),('bin', 'server'),('jre', 'bin', 'client'),('jre', 'bin', 'server')):")
+        line(out, 2, "path = os.path.join(os.environ['JAVA_HOME'], *location)")
+        line(out, 2,"if os.path.exists(os.path.join(path, 'jvm.dll')):")
+        line(out, 3,"os.add_dll_directory(path)")
+        line(out, 3,"break")
+
         line(out, 1, "import jcc")
         line(out, 0, "from . import %s", extname)
     else:
         line(out, 0, "import os")
+
+        line(out, 0, "if hasattr(os, 'add_dll_directory'):")
+        line(out, 1, "for location in (('bin', 'client'),('bin', 'server'),('jre', 'bin', 'client'),('jre', 'bin', 'server')):")
+        line(out, 2, "path = os.path.join(os.environ['JAVA_HOME'], *location)")
+        line(out, 2,"if os.path.exists(os.path.join(path, 'jvm.dll')):")
+        line(out, 3,"os.add_dll_directory(path)")
+        line(out, 3,"break")
+
         line(out, 0, "from . import %s", extname)
     line(out)
     line(out, 0, '__module_dir__ = os.path.abspath(os.path.dirname(__file__))')
